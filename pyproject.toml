

[project]
name = "Atmospheric Sounding"
version = "0.0.1"
description = "Atmospheric Sounding."
authors = [{ name = "Bjarke Gotfredsen", email = "bjarke@gotfredsen.com" }]
maintainers = [{ name = "Bjarke Gotfredsen", email = "bjarke@gotfredsen.com" }]
readme = "README.md"
requires-python = ">=3.7"
license = { file = "LICENSE" }

classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
]
[tool.coverage.report]
show_missing = true

[tool.coverage.run]
source = ["simyan"]

[tool.hatch.version]
path = "simyan/__init__.py"

[tool.pytest.ini_options]
addopts = ["--cov", "-x"]

[tool.ruff]
fix = true
ignore = [
  "ANN101",
  "D107",
  "D203",
  "D204",
  "D212",
  "D213",
  "D215",
  "D400",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413" # Ignored for google docstyle
]
line-length = 100
select = [
  "A",
  "ANN",
  "ARG",
  "B",
  "BLE",
  "C4",
  "C90",
  "D",
  "E",
  "ERA",
  "F",
  "I",
  "ICN",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RET",
  "RUF",
  "S",
  "SIM",
  "TID",
  "UP",
  "W",
  "YTT"
]
target-version = "py37"

[tool.ruff.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
combine-as-imports = true

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod", "pydantic.validator"]

[tool.ruff.per-file-ignores]
"tests/test_*.py" = ["ANN201", "S101"]